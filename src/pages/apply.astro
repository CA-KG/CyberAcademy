---
// src/pages/apply.astro
import Layout from '../components/layouts/Layout.astro';

// –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤
const courses = [
  "–°–µ—Ç–µ–≤–æ–π –∏–Ω–∂–µ–Ω–µ—Ä",
  "–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
  "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ Linux",
  "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
  "Windows Server",
  "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∂–µ–ª–µ–∑–æ"
];
---

<Layout title="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É | –ö–ò–ë–ï–†–ê–ö–ê–î–ï–ú–ò–Ø">
  <main class="apply-page">
    <section class="form-section">
      <h1>–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É</h1>
      <p>–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è</p>
      
      <form id="application-form" class="application-form">
        <!-- –ü–æ–ª–µ –§–ò–û -->
        <div class="form-group">
          <label for="fullname">–§–ò–û*</label>
          <input 
            type="text" 
            id="fullname" 
            name="fullname" 
            required
            placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
          >
        </div>
        
        <!-- –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ -->
        <div class="form-group">
          <label for="phone">–¢–µ–ª–µ—Ñ–æ–Ω*</label>
          <input 
            type="tel" 
            id="phone" 
            name="phone" 
            required
            placeholder="+996 (XXX) XXX-XXX"
          >
        </div>
        
        <div class="form-group">
          <label for="email">Email</label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            placeholder="your@email.com"
          >
        </div>
        
        <!-- –í—ã–±–æ—Ä –∫—É—Ä—Å–∞ -->
        <div class="form-group">
          <label for="course">–ö—É—Ä—Å, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª*</label>
          <select id="course" name="course" required>
            <option value="" disabled selected>–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å</option>
            {courses.map(course => (
              <option value={course}>{course}</option>
            ))}
          </select>
        </div>
        
        <!-- –ü–æ–ª–µ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ -->
        <div class="form-group">
          <label for="question">–í–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
          <textarea 
            id="question" 
            name="question" 
            rows="4"
            placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç..."
          ></textarea>
        </div>
        
        <button type="submit" class="submit-btn">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</button>
      </form>
    </section>
  </main>
</Layout>

<style>
  .apply-page {
    padding: 4rem 0;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .form-section {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 2rem;
  }
  
  .form-section h1 {
    font-size: 2.5rem;
    color: #043570;
    margin-bottom: 1rem;
    text-align: center;
  }
  
  .form-section p {
    font-size: 1.2rem;
    color: #64748b;
    margin-bottom: 3rem;
    text-align: center;
  }
  
  .application-form {
    display: grid;
    gap: 1.5rem;
  }
  
  .form-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .form-group label {
    font-weight: 600;
    color: #334155;
  }
  
  .form-group input,
  .form-group select,
  .form-group textarea {
    padding: 0.8rem 1rem;
    border: 1px solid #e2e8f0;
    border-radius: 6px;
    font-size: 1rem;
    transition: border-color 0.3s;
  }
  
  .form-group input:focus,
  .form-group select:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: #043570;
  }
  
  .submit-btn {
    background: #043570;
    color: white;
    padding: 1rem;
    border: none;
    border-radius: 6px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.3s;
    margin-top: 1rem;
  }
  
  .submit-btn:hover {
    background: #0066ff;
  }
  
  @media (max-width: 768px) {
    .form-section {
      padding: 0 1rem;
    }
    
    .form-section h1 {
      font-size: 2rem;
    }
  }
</style>

<script is:inline>
document.getElementById('application-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const form = e.target;
  const submitBtn = form.querySelector('button[type="submit"]');
  const originalBtnText = submitBtn.textContent;
  
  try {
    submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
    submitBtn.disabled = true;
    
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());
    
    // –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_BOT_TOKEN –∏ YOUR_CHAT_ID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    const botToken = '7239512144:AAG-9ngqMBWc0tMGW-3Mq8RD8EJriHB9Ru0';
    const chatId = '1104480407';
    
    const message = 
`üìù *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:*
üë§ *–§–ò–û:* ${data.fullname}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${data.phone}
‚úâÔ∏è *Email:* ${data.email || '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üéì *–ö—É—Ä—Å:* ${data.course}
‚ùì *–í–æ–ø—Ä–æ—Å:* ${data.question || '–Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–∞'}`;

    
    const response = await fetch(
      `https://api.telegram.org/bot${botToken}/sendMessage`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
  chat_id: chatId,
  text: message,
  parse_mode: 'Markdown'  // –∏—Å–ø–æ–ª—å–∑—É–µ–º Markdown
})
      }
    );
    
    if (response.ok) {
      alert('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
      form.reset();
    } else {
      throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  } finally {
    submitBtn.textContent = originalBtnText;
    submitBtn.disabled = false;
  }
});
</script>